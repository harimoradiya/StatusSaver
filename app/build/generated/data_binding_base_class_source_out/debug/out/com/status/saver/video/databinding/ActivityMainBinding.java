// Generated by view binder compiler. Do not edit!
package com.status.saver.video.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.navigation.NavigationView;
import com.status.saver.video.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final LinearLayout adaptiveBannerAd;

  @NonNull
  public final BottomNavigationView bottomNavView;

  @NonNull
  public final DrawerLayout container;

  @NonNull
  public final FrameLayout flAdPlaceholderMain;

  @NonNull
  public final NavigationView navigationView;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final ViewPager2 vp2;

  private ActivityMainBinding(@NonNull DrawerLayout rootView,
      @NonNull LinearLayout adaptiveBannerAd, @NonNull BottomNavigationView bottomNavView,
      @NonNull DrawerLayout container, @NonNull FrameLayout flAdPlaceholderMain,
      @NonNull NavigationView navigationView, @NonNull MaterialToolbar toolbar,
      @NonNull ViewPager2 vp2) {
    this.rootView = rootView;
    this.adaptiveBannerAd = adaptiveBannerAd;
    this.bottomNavView = bottomNavView;
    this.container = container;
    this.flAdPlaceholderMain = flAdPlaceholderMain;
    this.navigationView = navigationView;
    this.toolbar = toolbar;
    this.vp2 = vp2;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adaptiveBannerAd;
      LinearLayout adaptiveBannerAd = ViewBindings.findChildViewById(rootView, id);
      if (adaptiveBannerAd == null) {
        break missingId;
      }

      id = R.id.bottom_nav_view;
      BottomNavigationView bottomNavView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavView == null) {
        break missingId;
      }

      DrawerLayout container = (DrawerLayout) rootView;

      id = R.id.fl_ad_placeholder_main;
      FrameLayout flAdPlaceholderMain = ViewBindings.findChildViewById(rootView, id);
      if (flAdPlaceholderMain == null) {
        break missingId;
      }

      id = R.id.navigation_view;
      NavigationView navigationView = ViewBindings.findChildViewById(rootView, id);
      if (navigationView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.vp2;
      ViewPager2 vp2 = ViewBindings.findChildViewById(rootView, id);
      if (vp2 == null) {
        break missingId;
      }

      return new ActivityMainBinding((DrawerLayout) rootView, adaptiveBannerAd, bottomNavView,
          container, flAdPlaceholderMain, navigationView, toolbar, vp2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
