// Generated by view binder compiler. Do not edit!
package com.status.saver.video.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import com.google.android.material.textview.MaterialTextView;
import com.status.saver.video.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.zhanghai.android.fastscroll.FastScrollScrollView;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView cardViewAbout;

  @NonNull
  public final MaterialCardView cardViewDisclaimer;

  @NonNull
  public final MaterialCardView cardViewFeedback;

  @NonNull
  public final MaterialCardView cardViewLanguage;

  @NonNull
  public final MaterialCardView cardViewPrivacy;

  @NonNull
  public final Chip chipRateDev;

  @NonNull
  public final Chip chipShare;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final MaterialCardView cvDeveloper;

  @NonNull
  public final AppCompatImageView imageViewAppIcon;

  @NonNull
  public final AppCompatImageButton imageViewDisclaimerIcon;

  @NonNull
  public final AppCompatImageButton imageViewFeedbackIcon;

  @NonNull
  public final AppCompatImageButton imageViewLanguageIcon;

  @NonNull
  public final AppCompatImageView imageViewMoreIcon;

  @NonNull
  public final AppCompatImageButton imageViewPrivacyIcon;

  @NonNull
  public final FastScrollScrollView scrollView;

  @NonNull
  public final MaterialTextView textViewAppTitle;

  @NonNull
  public final MaterialTextView textViewAppVersion;

  @NonNull
  public final MaterialTextView textViewFeedbackTitle;

  @NonNull
  public final MaterialTextView textViewPrivacyTitle;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final MaterialTextView tvLanguage;

  private ActivitySettingsBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView cardViewAbout, @NonNull MaterialCardView cardViewDisclaimer,
      @NonNull MaterialCardView cardViewFeedback, @NonNull MaterialCardView cardViewLanguage,
      @NonNull MaterialCardView cardViewPrivacy, @NonNull Chip chipRateDev, @NonNull Chip chipShare,
      @NonNull ConstraintLayout container, @NonNull MaterialCardView cvDeveloper,
      @NonNull AppCompatImageView imageViewAppIcon,
      @NonNull AppCompatImageButton imageViewDisclaimerIcon,
      @NonNull AppCompatImageButton imageViewFeedbackIcon,
      @NonNull AppCompatImageButton imageViewLanguageIcon,
      @NonNull AppCompatImageView imageViewMoreIcon,
      @NonNull AppCompatImageButton imageViewPrivacyIcon, @NonNull FastScrollScrollView scrollView,
      @NonNull MaterialTextView textViewAppTitle, @NonNull MaterialTextView textViewAppVersion,
      @NonNull MaterialTextView textViewFeedbackTitle,
      @NonNull MaterialTextView textViewPrivacyTitle, @NonNull MaterialToolbar toolbar,
      @NonNull MaterialTextView tvLanguage) {
    this.rootView = rootView;
    this.cardViewAbout = cardViewAbout;
    this.cardViewDisclaimer = cardViewDisclaimer;
    this.cardViewFeedback = cardViewFeedback;
    this.cardViewLanguage = cardViewLanguage;
    this.cardViewPrivacy = cardViewPrivacy;
    this.chipRateDev = chipRateDev;
    this.chipShare = chipShare;
    this.container = container;
    this.cvDeveloper = cvDeveloper;
    this.imageViewAppIcon = imageViewAppIcon;
    this.imageViewDisclaimerIcon = imageViewDisclaimerIcon;
    this.imageViewFeedbackIcon = imageViewFeedbackIcon;
    this.imageViewLanguageIcon = imageViewLanguageIcon;
    this.imageViewMoreIcon = imageViewMoreIcon;
    this.imageViewPrivacyIcon = imageViewPrivacyIcon;
    this.scrollView = scrollView;
    this.textViewAppTitle = textViewAppTitle;
    this.textViewAppVersion = textViewAppVersion;
    this.textViewFeedbackTitle = textViewFeedbackTitle;
    this.textViewPrivacyTitle = textViewPrivacyTitle;
    this.toolbar = toolbar;
    this.tvLanguage = tvLanguage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_view_about;
      MaterialCardView cardViewAbout = ViewBindings.findChildViewById(rootView, id);
      if (cardViewAbout == null) {
        break missingId;
      }

      id = R.id.card_view_disclaimer;
      MaterialCardView cardViewDisclaimer = ViewBindings.findChildViewById(rootView, id);
      if (cardViewDisclaimer == null) {
        break missingId;
      }

      id = R.id.card_view_feedback;
      MaterialCardView cardViewFeedback = ViewBindings.findChildViewById(rootView, id);
      if (cardViewFeedback == null) {
        break missingId;
      }

      id = R.id.card_view_language;
      MaterialCardView cardViewLanguage = ViewBindings.findChildViewById(rootView, id);
      if (cardViewLanguage == null) {
        break missingId;
      }

      id = R.id.card_view_privacy;
      MaterialCardView cardViewPrivacy = ViewBindings.findChildViewById(rootView, id);
      if (cardViewPrivacy == null) {
        break missingId;
      }

      id = R.id.chip_rate_dev;
      Chip chipRateDev = ViewBindings.findChildViewById(rootView, id);
      if (chipRateDev == null) {
        break missingId;
      }

      id = R.id.chip_share;
      Chip chipShare = ViewBindings.findChildViewById(rootView, id);
      if (chipShare == null) {
        break missingId;
      }

      ConstraintLayout container = (ConstraintLayout) rootView;

      id = R.id.cv_developer;
      MaterialCardView cvDeveloper = ViewBindings.findChildViewById(rootView, id);
      if (cvDeveloper == null) {
        break missingId;
      }

      id = R.id.image_view_app_icon;
      AppCompatImageView imageViewAppIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageViewAppIcon == null) {
        break missingId;
      }

      id = R.id.image_view_disclaimer_icon;
      AppCompatImageButton imageViewDisclaimerIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageViewDisclaimerIcon == null) {
        break missingId;
      }

      id = R.id.image_view_feedback_icon;
      AppCompatImageButton imageViewFeedbackIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageViewFeedbackIcon == null) {
        break missingId;
      }

      id = R.id.image_view_language_icon;
      AppCompatImageButton imageViewLanguageIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageViewLanguageIcon == null) {
        break missingId;
      }

      id = R.id.image_view_more_icon;
      AppCompatImageView imageViewMoreIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageViewMoreIcon == null) {
        break missingId;
      }

      id = R.id.image_view_privacy_icon;
      AppCompatImageButton imageViewPrivacyIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageViewPrivacyIcon == null) {
        break missingId;
      }

      id = R.id.scroll_view;
      FastScrollScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.text_view_app_title;
      MaterialTextView textViewAppTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewAppTitle == null) {
        break missingId;
      }

      id = R.id.text_view_app_version;
      MaterialTextView textViewAppVersion = ViewBindings.findChildViewById(rootView, id);
      if (textViewAppVersion == null) {
        break missingId;
      }

      id = R.id.text_view_feedback_title;
      MaterialTextView textViewFeedbackTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewFeedbackTitle == null) {
        break missingId;
      }

      id = R.id.text_view_privacy_title;
      MaterialTextView textViewPrivacyTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewPrivacyTitle == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_language;
      MaterialTextView tvLanguage = ViewBindings.findChildViewById(rootView, id);
      if (tvLanguage == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ConstraintLayout) rootView, cardViewAbout,
          cardViewDisclaimer, cardViewFeedback, cardViewLanguage, cardViewPrivacy, chipRateDev,
          chipShare, container, cvDeveloper, imageViewAppIcon, imageViewDisclaimerIcon,
          imageViewFeedbackIcon, imageViewLanguageIcon, imageViewMoreIcon, imageViewPrivacyIcon,
          scrollView, textViewAppTitle, textViewAppVersion, textViewFeedbackTitle,
          textViewPrivacyTitle, toolbar, tvLanguage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
